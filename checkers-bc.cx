package bc

var game_id[]str
var game_steps[][]i32
var lastgame i32

func newGame(id str) (pos i32){
	var jp i32
	jp = joinGame(id)
	if jp == -1 {
		game_id = append(game_id, id)
		lastgame = len(game_id)-1
		pos = lastgame
	} else {
		pos = -1
	}
	
}

func joinGame(id str) (pos i32){
	pos = -1
	for x := 0; x <= lastgame; x++ {
		if game_id[x] == id {
			pos = x
			return
		}
	}
}

func viewBoard(board [8][8]i32) (v str) {

	var row [8]str
	row = [8]str {"8","7","6","5","4","3","2","1"}
	
	v = ""

	for i := 0; i < 8; i++ {
		v = v + row[i]
		for j := 0; j < 8; j++ {

			v = v + " | "
			if board[i][j] == 0 {
				v = v + "="
			} else if board[i][j] == 1 {
				v = v + "X"
			} else if board[i][j] == 2 {
				v = v + "O"
			} else if board[i][j] == 3 {
				v = v + " "
			} else if board[i][j] == 7 {
				v = v + "%"
			} else if board[i][j] == 8 {
				v = v + "0"
			}

		}
		v = v + " |\n"

	}

	v = v + "    A   B   C   D   E   F   G   H "

}


package main
import "bc"

func main() {

	bc.lastgame=-1

	//tx

	//test1
	var new1 i32
	new1 = bc.newGame("g7890")
	if new1 == -1 {
		printf("test1: error new game g7890, aleady exist!\n")
	} else {
		printf("test1: New game g7890 created, id: %d\n", new1)
	}

	//test2
	var new2 i32
	new2 = bc.newGame("g7890")
	if new2 == -1 {
		printf("test2: error new game g7890, aleady exist!\n")
	} else {
		printf("test2: New game g7890 created, id: %d\n", new2)
	}

	//test3
	new2 = bc.newGame("g7891")
	if new2 == -1 {
		printf("test3: error new game g7891, aleady exist!\n")
	} else {
		printf("test3: New game g7891 created, id: %d\n", new2)
	}

	//test4
	var join1 i32
	join1 = bc.joinGame("g7891")
	if join1 == -1 {
		printf("test4: error join game g7891, not exist!\n")
	} else {
		printf("test4: Join game g7891 success, id: %d\n", join1)
	}

	//test5
	var join2 i32
	join2 = bc.joinGame("g7892")
	if join2 == -1 {
		printf("test5: error join game g7892, not exist!\n")
	} else {
		printf("test5: Join game g7892 success, id: %d\n", join2)
	}

	var tmprow [8]i32
	var board [8][8]i32

	tmprow = [8]i32 {0,2,0,2,0,2,0,2}
	board[0] = tmprow

	tmprow = [8]i32 {2,0,2,0,2,0,2,0}
	board[1] = tmprow

	tmprow = [8]i32 {0,2,0,2,0,2,0,2}
	board[2] = tmprow

	tmprow = [8]i32 {3,0,3,0,3,0,3,0}
	board[3] = tmprow

	tmprow = [8]i32 {0,3,0,3,0,3,0,3}
	board[4] = tmprow

	tmprow = [8]i32 {1,0,1,0,1,0,1,0}
	board[5] = tmprow
	
	tmprow = [8]i32 {0,1,0,1,0,1,0,0}
	board[6] = tmprow

	tmprow = [8]i32 {1,0,1,0,1,0,1,0}
	board[7] = tmprow

	str.print(bc.viewBoard(board))

}
